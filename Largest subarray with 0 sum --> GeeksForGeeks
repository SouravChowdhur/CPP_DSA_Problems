int maxLen(vector<int>&A, int n)
    {   
        // Your code here
        unordered_map<int, int> map;
        int maxi = 0;
        int sum = 0;
        for(int i=0; i<n; i++){
            sum += A[i];
            if(sum == 0){
                maxi = i+1;
            }
            else{
                if(map.find(sum) != map.end()){ // condition to check whether the current sum is actually present in the hashmap or not
                    maxi = max(maxi, i-map[sum]); // current index - previous sum last index
                }
                else{
                    map[sum] = i; // simply put into the hashmap
                }
            }
        }
        return maxi;
    }
