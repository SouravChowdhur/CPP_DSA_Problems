vector<vector<int> > fourSum(vector<int> &arr, int k) {
        // Your code goes here
        vector<vector<int>> result;
        if(arr.empty()){
            return result;
        }
        int n = arr.size();
        sort(arr.begin(), arr.end());
        for(int i=0; i<n; i++){
            for(int j=i+1; j<n; j++){
               
                int target = k - arr[j] - arr[i];
                int front = j + 1;
                int back = n-1;
                while(front < back){
                    int sum = arr[front] + arr[back];
                    if(sum<target)
                          front++;
                    else if(sum > target)
                          back--;
                    else{
                        vector<int> quadruple(4, 0);
                        quadruple[0] = arr[i];
                        quadruple[1] = arr[j];
                        quadruple[2] = arr[front];
                        quadruple[3] = arr[back];
                        result.push_back(quadruple);
                        while(front<back && arr[front] == quadruple[2])
                              front++;
                        while(front<back && arr[back] == quadruple[3])
                              back--;
                    }
                }
                while(j+1<n && arr[j+1] == arr[j])
                     j++;
            }
            while(i+1<n && arr[i+1] == arr[i])
                     i++;
        }
        return result;
    }
